AWSTemplateFormatVersion: "2010-09-09"
Description:  Cross_Stack Loadbalancer + ASG 

Mappings:
  Regionmap:  
    ap-northeast-2:
      Linux2: ami-01d87646ef267ccd7 


Parameters:
  AMI:
    Type: String
    Default: Linux2

  VPCId:
    Type: String
  EXLBsecurity:
    Type: String
  websecurity:
    Type: String
  Key:
    Type: String
  InstanceType:
    Type: String
  sshsecurity:
    Type: String
  PublicSubnet1:
    Type: String
  PublicSubnet2:
    Type: String
  PrivateSubnetWEB1:
    Type: String
  PrivateSubnetWEB2:
    Type: String
  PrivateSubnetWAS1:
    Type: String
  PrivateSubnetWAS2:
    Type: String
 



Resources:
  bastion:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap [Regionmap, !Ref 'AWS::Region', Linux2]
      KeyName: !Ref Key
      SecurityGroupIds: 
      - !Ref sshsecurity
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: BastionHost
          Key: Stack
          Value: !Ref AWS::StackName




  #########################################################
  #                                                       #
  #                         ALB                           #
  #                                                       #    
  #########################################################
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: CFNLB
      Subnets: 
      - !Ref PublicSubnet1
      - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref EXLBsecurity
      Tags:
        - Key: Name
          Value: CFNLB
        - Key: Stack
          Value: !Ref AWS::StackName

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup

  
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: CFNTG
      VpcId: !Ref VPCId
      Port: 80
      Protocol: HTTP
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
  #########################################################
  #                                                       #
  #                         ASG                           #
  #                                                       #    
  #########################################################
  LaunchConf:
    Type: AWS::AutoScaling::LaunchConfiguration
    Description: Ec2 launch configuration
    Properties:
      ImageId: !FindInMap [Regionmap, !Ref 'AWS::Region', Linux2]
      InstanceType: !Ref InstanceType
      LaunchConfigurationName: CFNConfig
      KeyName: !Ref Key 
      InstanceMonitoring: true
      SecurityGroups: 
        - !Ref websecurity
      UserData:
        !Base64 |
        #!/bin/bash -ex
        amazon-linux-extras install -y epel
        yum install -y mariadb* php httpd php-mysql git stress
        git clone https://github.com/sanghyupLEE9/FormationtoAWS.git
        cp /FormationtoAWS/index.php /var/www/html/index.php
        systemctl enable httpd mariadb
        systemctl start httpd mariadb


  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Description: Logical Ec2 group
    Properties:
      MaxSize: 4
      MinSize: 2
      AutoScalingGroupName: CFNASG
      Cooldown: 30 
      DesiredCapacity: 2
      LaunchConfigurationName: !Ref LaunchConf
      VPCZoneIdentifier: 
        - !Ref PrivateSubnetWEB1
        - !Ref PrivateSubnetWEB2
      TargetGroupARNs: 
        - !Ref ALBTargetGroup
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: web-asg
          key : Stack
          Value : !Ref AWS::StackName
        

  Ec2policy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref ASG
      PolicyType: TargetTrackingScaling   #대상 추적 조정 정책 생성
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 70


        

Outputs:
  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref ALB

  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt ALB.DNSName



        



 
