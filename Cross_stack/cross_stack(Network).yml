AWSTemplateFormatVersion: "2010-09-09"
Description: VPC Configuration



            
Parameters:   

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC ex(10.0.0.0/16)
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PubCIDR1:
    Description: Please enter the IP range (CIDR notation) ex(10.0.1.0/24)
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    
  PubCIDR2:
    Description: Please enter the IP range (CIDR notation) ex(10.0.2.0/24)
    Type: String
    Default: 10.0.2.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PriCIDRWEB1:
    Description: Please enter the IP range (CIDR notation) ex(10.0.10.0/24)
    Type: String
    Default: 10.0.10.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
   
  PriCIDRWEB2:
    Description: Please enter the IP range (CIDR notation) ex(10.0.20.0/24)
    Type: String
    Default: 10.0.20.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PriCIDRWAS1:
    Description: Please enter the IP range (CIDR notation) ex(10.0.30.0/24)
    Type: String
    Default: 10.0.30.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PriCIDRWAS2:
    Description: Please enter the IP range (CIDR notation) ex(10.0.40.0/24)
    Type: String  
    Default: 10.0.40.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

  PriCIDRDB1:
    Description: Please enter the IP range (CIDR notation) ex(10.0.50.0/24)
    Type: String
    Default: 10.0.50.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
   
  PriCIDRDB2:
    Description: Please enter the IP range (CIDR notation) ex(10.0.60.0/24)
    Type: String 
    Default: 10.0.60.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'




Resources:
########### VPC ####################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: CFN-VPC 
        - Key: stackName
          Value: !Ref 'AWS::StackName'
############### igw #####################
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CFN-igw
        - Key: stackName
          Value: !Ref 'AWS::StackName'
  Attachigw:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn: [VPC, InternetGateway ]
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

          
########### Subnet #################
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref PubCIDR1
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: CFN-Pub1
        - Key: stackName
          Value: !Ref 'AWS::StackName'
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs ]
      CidrBlock: !Ref PubCIDR2
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: CFN-Pub2
        - Key: stackName
          Value: !Ref 'AWS::StackName'
  PrivateSubnetWEB1:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref PriCIDRWEB1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CFN-WEB1
        - Key: stackName
          Value: !Ref 'AWS::StackName'
  PrivateSubnetWEB2:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs ]
      CidrBlock: !Ref PriCIDRWEB2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CFN-WEB2
        - Key: stackName
          Value: !Ref 'AWS::StackName'
  PrivateSubnetWAS1:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref PriCIDRWAS1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CFN-WAS1
        - Key: stackName
          Value: !Ref 'AWS::StackName'
  PrivateSubnetWAS2:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs ]
      CidrBlock: !Ref PriCIDRWAS2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CFN-WAS2
        - Key: stackName
          Value: !Ref 'AWS::StackName'
  PrivateSubnetDB1:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref PriCIDRDB1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CFN-DB1
        - Key: stackName
          Value: !Ref 'AWS::StackName'
  PrivateSubnetDB2:
    Type: AWS::EC2::Subnet
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs ]
      CidrBlock: !Ref PriCIDRDB2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CFN-DB2
        - Key: stackName
          Value: !Ref 'AWS::StackName'
################ EIP NAT  ##############
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: VPC
    DependsOn: Attachigw
    Properties:
      Domain: vpc    

  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: [VPC, NatGatewayEIP]
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: CFN-NAT
        - Key: stackName
          Value: !Ref 'AWS::StackName'
############ Routing Table ##############

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: CFN-PublicRT
        - Key: stackName
          Value: !Ref 'AWS::StackName'
          
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: CFN-PrivateRT
        - Key: stackName
          Value: !Ref 'AWS::StackName' 
 
        
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: [Attachigw, PublicRouteTable,InternetGateway]
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: [Attachigw, PublicRouteTable,InternetGateway,PublicRoute]
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
   
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: [Attachigw, PublicRouteTable,InternetGateway,PublicRoute]
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  

  PrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: [PrivateRouteTable, NatGateway]
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
  
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: [PrivateRouteTable, NatGateway,PrivateRoute]
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetWEB1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: [PrivateRouteTable, NatGateway,PrivateRoute]
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetWEB2     

  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: [PrivateRouteTable, NatGateway,PrivateRoute]
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetWAS1

  PrivateSubnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: [PrivateRouteTable, NatGateway,PrivateRoute]
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetWAS2    

  PrivateSubnet5RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: [PrivateRouteTable, NatGateway,PrivateRoute]
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetDB1

  PrivateSubnet6RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: [PrivateRouteTable, NatGateway,PrivateRoute]
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetDB2     
     

Outputs:
  VPCID:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PublicSubnet1:
    Value: !Ref PublicSubnet1
  PublicSubnet2:
    Value: !Ref PublicSubnet2

  PrivateSubnetWEB1:
    Value: !Ref PrivateSubnetWEB1
  PrivateSubnetWEB2:
    Value: !Ref PrivateSubnetWEB2
  
  PrivateSubnetWAS1:
    Value: !Ref PrivateSubnetWAS1
  PrivateSubnetWAS2:
    Value: !Ref PrivateSubnetWAS2

  PrivateSubnetDB1:
    Value: !Ref PrivateSubnetDB1
  PrivateSubnetDB2:
    Value: !Ref PrivateSubnetDB2
