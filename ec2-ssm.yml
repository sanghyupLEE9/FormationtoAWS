AWSTemplateFormatVersion: "2010-09-09"
Description: Infra configuration Next Step EC2 systemmanger Configure
Metadata: #파라미터들의 그룹들을 Label 작업
  AWS::CloudFormation::Interface: 
    ParameterGroups:          
      - 
        Label: 
          default: "Amazon EC2 Configuration"
        Parameters:
          - pubSub 
          - priSub
          - InstanceType
          - AMI
          - KeyName
      - 
        Label:
          default: "Network config"
        Parameters:
          - VPC
          
Mappings:
  Regionmap:  
    ap-northeast-2:
      Linux2: ami-0f2c95e9fe3f8f80e
      window: ami-0685efd12a23690f5

Parameters:
  EnvironmentName: #변수값으로 저장하여 리소스들의 공통된 네임 지정
    Description: A common name for your resources
    Type: String 
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: select having your vpc
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select your Keypair
  AMI:
    Description: AMI of EC2
    Type: String
    Default: Linux2
    AllowedValues:
      - Linux2
      - window
  
  priSub:  # 서브넷 선택(Select to your subnet)
    Description: Cidr Block for Subnet
    Type: AWS::EC2::Subnet::Id
  pubSub:  # 서브넷 선택(Select to your subnet)
    Description: Cidr Block for Subnet
    Type: AWS::EC2::Subnet::Id
   
  InstanceType: #인스턴스 타입
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  
  ssmIAMRole:
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Description: Create Formation Ec2 Role
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      RoleName: EC2SSM-CreateFormation
  webinstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref ssmIAMRole
  ############### secuirty ################# 
  sshsecurity:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow ssh
      GroupName: !Sub ${EnvironmentName} ssh-security
      VpcId:
        !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SSHLocation
      Tags:
        - Key: Name
          Value: SSHSG

  websecurity:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow http and ssh
      GroupName: !Sub ${EnvironmentName} web-security
      VpcId:
        !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        SourceSecurityGroupId: !Ref sshsecurity
      Tags:
        - Key: Name
          Value: WEBSG
  DBaccess:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow webserver
      GroupName: !Sub ${EnvironmentName}DBSG
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: TCP
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId: !Ref websecurity
      Tags:
        - Key: Name
          Value: DBSG
  ############# instnace #####################
  bastion:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap [Regionmap, !Ref 'AWS::Region', Linux2] #위의 Mappings 데이터에서 Regionmap에 대한 속성값 추출 그중 AMI 참조 AWS::Region참조시 자동으로 사용리전 적용
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref webinstanceProfile
      SecurityGroupIds: 
      - !Ref sshsecurity
      SubnetId: !Ref pubSub
      Tags:
      - 
        Key: Name
        Value: bastion
  

  webserver:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [Regionmap, !Ref 'AWS::Region', Linux2]
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      SubnetId: !Ref priSub
      IamInstanceProfile: !Ref webinstanceProfile
      SecurityGroupIds:
        - !Ref websecurity
      UserData:
        !Base64 |
        #!/bin/bash -ex
        amazon-linux-extras install -y epel
        yum install -y mariadb* php httpd php-mysql      
        systemctl enable httpd mariadb
        systemctl start httpd mariadb
      Tags:
      - 
        Key: Name
        Value: Web Server
  

      Tags:
      - 
        Key: Name
        Value: webserver
         
  
Outputs:
  InstanceID:
    Description: The Instance ID
    Value: !Ref webserver
